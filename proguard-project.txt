# To enable ProGuard in your project, edit project.properties
# to define the proguard.config property as described in that file.
#
# Add project specific ProGuard rules here.
# By default, the flags in this file are appended to flags specified
# in ${sdk.dir}/tools/proguard/proguard-android.txt
# You can edit the include path and order by changing the ProGuard
# include property in project.properties.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# Add any project specific keep options here:

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

-ignorewarnings

-keep class scala.util.Right
-keep class scala.util.Left
-keep class scala.util.Either
-keep class scala.collection.GenSeqViewLike$DroppedWhile
-keep class scala.collection.parallel.ForkJoinTasks$WrappedTask
-keep class scala.collection.parallel.FutureThreadPoolTasks$WrappedTask
-keep class scala.collection.parallel.ThreadPoolTasks$WrappedTask

# distributed defaults follow

-keep class scala.Function1
-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinPool {
    long ctl;
    long eventCount;
    int  indexSeed;
    int  plock;
    int  runControl;
    long stealCount;
    int  workerCounts;
}
-keepclassmembers class * {
    ** parkBlocker;
}
-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinWorkerThread {
    int base;
    int sp;
    int runState;
}
-keepclassmembers class scala.concurrent.forkjoin.ForkJoinPool$WorkQueue {
    int qlock;
    int runState;
}
-keepclassmembernames class scala.concurrent.forkjoin.LinkedTransferQueue {
    int sweepVotes;
    scala.concurrent.forkjoin.LinkedTransferQueue$Node tail;
    scala.concurrent.forkjoin.LinkedTransferQueue$Node head;
}
-keepclassmembernames class scala.concurrent.forkjoin.LinkedTransferQueue$Node {
    java.lang.Object item;
    java.lang.Thread waiter;
    scala.concurrent.forkjoin.LinkedTransferQueue$Node next;
}
-keepclassmembers class scala.concurrent.forkjoin.ForkJoinTask$ExceptionNode {
    scala.concurrent.forkjoin.ForkJoinTask$ExceptionNode next;
}

# The foregoing are sufficient to compile as distributed without warnings.
# The following, possibly helpful, may increase the apk file by >500 kilobytes.

-verbose

# Android

-dontpreverify
-repackageclasses ''
-allowaccessmodification
-optimizations !code/simplification/arithmetic

-keep public class com.github.paulyc.asr.android.MyScalaActivity

# Scala applications with the scala runtime

-dontwarn scala.**

-keepclassmembers class * {
    ** MODULE$;
}

-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinTask {
    int status;
}

# Helpful when using Akka

# Necessary to prevent fatal warnings about sun.misc.Unsafe
# which is not present when building, but is available at runtime on the device.
-dontwarn sun.misc.Unsafe

-keep class akka.** {
  public <methods>;
}

-keep class com.typesafe.config.Config
-keep class scala.Function0
-keep class scala.Function2
-keep class scala.Function3
-keep class scala.Option
-keep class scala.PartialFunction
-keep class scala.Predef$$less$colon$less
-keep class scala.Tuple2
-keep class scala.Tuple3
-keep class scala.collection.Iterable
-keep class scala.collection.GenIterable
-keep class scala.collection.GenSeq
-keep class scala.collection.LinearSeq
-keep class scala.collection.Seq
-keep class scala.collection.Traversable
-keep class scala.collection.TraversableOnce
-keep class scala.collection.TraversableLike
-keep class scala.collection.Iterator
-keep class scala.collection.SeqLike {
    # for SI-5397
    public protected *;
}
-keep class scala.collection.generic.CanBuildFrom
-keep class scala.collection.immutable.TreeMap
-keep class scala.collection.immutable.Map
-keep class scala.collection.immutable.SortedMap
-keep class scala.collection.immutable.MapLike
-keep class scala.collection.immutable.Seq
-keep class scala.collection.immutable.TreeSet
-keep class scala.collection.immutable.Set
-keep class scala.collection.immutable.Iterable
-keep class scala.collection.immutable.IndexedSeq
-keep class scala.collection.immutable.List
-keep class scala.collection.immutable.Queue
-keep class scala.collection.immutable.Traversable
-keep class scala.collection.immutable.Vector
-keep class scala.collection.mutable.Map
-keep class scala.collection.mutable.Builder
-keep class scala.collection.mutable.Buffer
-keep class scala.collection.mutable.ArrayBuffer
-keep class scala.collection.mutable.WrappedArray
-keep class scala.collection.mutable.Queue
-keep class scala.collection.mutable.Set
-keep class scala.collection.mutable.StringBuilder
-keep class scala.concurrent.BlockContext
-keep class scala.concurrent.CanAwait
-keep class scala.concurrent.ExecutionContext
-keep class scala.concurrent.Future
-keep class scala.concurrent.Promise
-keep class scala.concurrent.forkjoin.ForkJoinPool$ForkJoinWorkerThreadFactory
-keep class scala.concurrent.forkjoin.ForkJoinPool
-keep class scala.concurrent.forkjoin.ForkJoinTask
-keep class scala.concurrent.forkjoin.ForkJoinPool$ManagedBlocker
-keep class scala.collection.GenTraversableOnce
-keep class scala.concurrent.duration.FiniteDuration
-keep class scala.concurrent.duration.Duration
-keep class scala.concurrent.duration.Deadline
-keep class scala.math.Integral
-keep class scala.math.Numeric
-keep class scala.math.Ordering
-keep class scala.reflect.ClassTag
-keep class scala.runtime.IntRef
-keep class scala.runtime.BoxedUnit
-keep class scala.runtime.IntRef
-keep class scala.runtime.ObjectRef
-keep class scala.runtime.ByteRef
-keep class scala.runtime.CharRef
-keep class scala.runtime.DoubleRef
-keep class scala.runtime.FloatRef
-keep class scala.runtime.ShortRef
-keep class scala.runtime.LongRef
-keep class scala.runtime.BooleanRef
-keep class scala.util.Try